rm(list=ls())
library("dplyr")
library("devtools")
setwd("/Users/yliao13/PycharmProjects/phd_class/Lab_work/data_files/metabolic_signature/MTBLS1033/Urine/POS/new_analysis/R_STUDIO/")
myTable <- read.table("r_input.csv",header=TRUE,row.names = 1, sep = ",")
View(myTable)
## this is the correct target labels
factors <- tail(myTable, n =1)
factors
View(factors)
pvalueList_anova <- get_anova_pvalues(head(myTable,-1), factors)
get_anova_pvalues <- function(dataframe, factors) {
pvalueList <- vector()
for(i in 1: nrow(dataframe)){
pvalueList[i] <- anova(lm(factors ~ as.numeric(dataframe[i,])))$"Pr(>F)"[1]
}
return(pvalueList)
}
counts <- function(dataset) {
sigIndex <- vector()
counts <- 0
for(i in 1: length(dataset)){
if(is.na(dataset[i]))
{print(i)}
else
{if(dataset[i] < 0.15){
counts <- counts + 1
sigIndex <- append(sigIndex, i)
}}
}
return(list(counts, sigIndex))
# return(counts)
}
pvalueList_anova <- get_anova_pvalues(head(myTable,-1), factors)
View(factors)
factors
type(factors)
typeof(factors)
head(myTable,-1)
typeof(head(myTable,-1))
data_frame <- myTable[:-1, :]
myTable[c(1:-1,:)]
myTable[c(1:-1,)]
myTable[c(-1,)]
myTable[c(1:-1,:)]
myTable[c(-1)]
typeof(myTable[c(-1)])
a <- myTable[c(-1)]
View(a)
a <- myTable[c(-1,)]
a <- myTable[c(-1),]
View(a)
a <- myTable[,c(-1)]
View(a)
View(a)
View(a)
rm(list=ls())
library("dplyr")
library("devtools")
setwd("/Users/yliao13/PycharmProjects/phd_class/Lab_work/data_files/metabolic_signature/MTBLS1033/Urine/POS/new_analysis/R_STUDIO/")
myTable <- read.table("r_input.csv",header=TRUE,row.names = 1, sep = ",")
get_anova_pvalues <- function(dataframe, factors) {
pvalueList <- vector()
for(i in 1: nrow(dataframe)){
pvalueList[i] <- anova(lm(factors ~ as.numeric(dataframe[i,])))$"Pr(>F)"[1]
}
return(pvalueList)
}
counts <- function(dataset) {
sigIndex <- vector()
counts <- 0
for(i in 1: length(dataset)){
if(is.na(dataset[i]))
{print(i)}
else
{if(dataset[i] < 0.15){
counts <- counts + 1
sigIndex <- append(sigIndex, i)
}}
}
return(list(counts, sigIndex))
# return(counts)
}
## this is the correct target labels
factors <- tail(myTable, n =1)
a <- myTable[,c(-1)]
View(a)
b <- myTable[c(-1),]
View(b)
View(myTable)
data_new <- head(myTable, -1)
View(data_new)
View(myTable)
pvalueList_anova <- get_anova_pvalues(data_new, factors)
pvalueList[i] <- anova(lm(factors ~ as.numeric(data_new[1,])))$"Pr(>F)"[1]
pvalueList[i] <- anova(lm(factors ~ as.numeric(data_new[1,])))$"Pr(>F)"[1]
factors
unlist(factors)
typeof(factors)
pvalueList[i] <- anova(lm(factors ~ as.numeric(data_new[1,])))$"Pr(>F)"[1]
b <- myTable[:c(-1),]
b <- myTable[c(-1):,]
b <- myTable[c(-1:),]
tail(myTable, n =1)
tail(myTable, n =1).tolist()
tail(myTable, n =1).tolist
tail(myTable, n =1).to_list
tail(myTable, n =1).to_list()
typeof(tail(myTable, n =1))
v <- unlist(factors)
## this is the correct target labels
factors <- unlist(tail(myTable, n =1))
typeof(factors)
pvalueList_anova <- get_anova_pvalues(data_new, factors)
hist(pvalueList_anova, breaks = 100, main="pValues of variables histogram")
adjusted_pvalues_anova <- p.adjust(pvalueList_anova, method="BH")
count <- counts(adjusted_pvalues_anova)
count
count[[2]]
counts <- function(dataset) {
sigIndex <- vector()
counts <- 0
for(i in 1: length(dataset)){
if(is.na(dataset[i]))
{print(i)}
else
{if(dataset[i] < 0.05){
counts <- counts + 1
sigIndex <- append(sigIndex, i)
}}
}
return(list(counts, sigIndex))
# return(counts)
}
count <- counts(adjusted_pvalues_anova)
count[[2]]
count[[1]]
write.csv(count[[2]],file="pvalue_fdr_5_percent.csv",row.names=F)
write.csv(count[[2]],file="pvalue_significant_index_fdr_5_percent.csv",row.names=F)
View(myTable)
View(myTable)
